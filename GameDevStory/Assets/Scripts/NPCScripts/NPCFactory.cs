using System.Collections;
using System.Collections.Generic;
using UnityEngine;

// singleton in charge of managing generation of NPCs. Note this class should not "instantiate" NPC game objects, rather it should be
// generating the npc stats and attributes - essentially building an NPC that is ready to be made into a game object.
public class NPCFactory : Singleton<NPCFactory> {

    // data structure for storing NPC stats. These are randomly generated by the npc factory
    public class NPCStats
    {
        public int communication;
        public int testing;
        public int technical;
        public int creativity;
        public int design;
    }

    public List<NPCAttributes> npcs; // a pool of pre-made NPCs that are available for instantiation

    // selects a pre-made npc at random from the pool of potential npcs
    public NPCAttributes SelectRandomNPC()
    {
        return npcs[Random.Range(0,npcs.Count - 1)];
    }

    // generates a stats object with all fields randomly initialized
    public NPCStats GetRandomStats()
    {
        NPCStats stats = new NPCStats
        {
            communication = Random.Range(1, 101),
            creativity = Random.Range(1, 101),
            testing = Random.Range(1, 101),
            technical = Random.Range(1, 101),
            design = Random.Range(1, 101)
        };

        return stats;
    }

    public NPCInfo CreateNPCWithRandomizedStats()
    {
        NPCAttributes randomNPC = SelectRandomNPC();
        NPCInfo npc = new NPCInfo()
        {
            attributes = randomNPC,
            stats = GetRandomStats()
        };

        npcs.Remove(randomNPC);

        return npc;
    }
}
